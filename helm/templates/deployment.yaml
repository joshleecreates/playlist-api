apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "playlist.fullname" . }}
  labels:
    {{- include "playlist.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "playlist.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "playlist.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}-api"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
          env:
            - name: INSTANA_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: REDIS_URL
              value: redis://redis.playlists.svc.cluster.local:6379
            - name: MONGO_URL
              value: mongodb://playlists-mongodb.playlists.svc.cluster.local:27017
            - name: ENABLE_CACHE
              value: "1"
            - name: MAX_DELAY
              value: "30" 
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              httpHeaders:
                - name: X-INSTANA-SYNTHETIC
                  value: "1"
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              httpHeaders:
                - name: X-INSTANA-SYNTHETIC
                  value: "1"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: playlists-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}-api"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:         
          - name: MONGO_URL
            value: mongodb://playlists-mongodb.playlists.svc.cluster.local:27017
          command: ['node', './src/seeds.js']
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
